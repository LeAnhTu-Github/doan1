datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
  binaryTargets   = ["native", "darwin", "darwin-arm64"]
}

model Course {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  userId         String
  title          String
  description    String?
  imageUrl       String?
  price          Float?
  isPublished    Boolean          @default(false)
  categoryId     String?          @db.ObjectId
  category       Category?        @relation(fields: [categoryId], references: [id])
  chapters       Chapter[]
  attachments    Attachment[]
  purchases      Purchase[]
  courseRegister courseRegister[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

model courseRegister {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  courseId   String   @db.ObjectId
  userId     String
  masv       String?
  name       String?
  email      String?
  class      String?
  isRegister Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  course     Course   @relation(fields: [courseId], references: [id])
}

model Category {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name    String   @unique
  courses Course[]
}

model Attachment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  url       String
  courseId  String   @db.ObjectId
  course    Course   @relation(fields: [courseId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Chapter {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  description  String?
  videoUrl     String?
  position     Int
  isPublished  Boolean        @default(false)
  isFree       Boolean        @default(false)
  muxData      MuxData?
  courseId     String         @db.ObjectId
  course       Course         @relation(fields: [courseId], references: [id])
  userProgress UserProgress[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model MuxData {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  assetId    String
  playbackId String?
  chapterId  String  @unique @db.ObjectId
  chapter    Chapter @relation(fields: [chapterId], references: [id])
}

model UserProgress {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String
  chapterId   String   @db.ObjectId
  chapter     Chapter  @relation(fields: [chapterId], references: [id])
  isCompleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  @@unique([userId, chapterId]) 
}

model Purchase {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  courseId  String   @db.ObjectId
  course    Course   @relation(fields: [courseId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model StripeCustomer {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  userId           String   @unique
  stripeCustomerId String   @unique
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model User {
  id         String   @id @map("_id")
  masv       String?
  name       String?
  email      String?  @unique
  class      String?
  department String?
  image      String?
  role       String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Event {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String
  title       String
  name        String?
  date        String?
  link        String?
  author      String?
  host        String?
  imageUrl    String?
  address     String?
  description String?
  codeQR      String?
  isPublished Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model userRegister {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String
  eventId    String
  masv       String?
  name       String?
  email      String?
  class      String?
  question   String?
  isRegister Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Score {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  testId    String
  masv      String?
  name      String?
  class     String?
  score     Float?
  rank      Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Problem {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  title      String?
  difficulty String?
  category   String?
  time       DateTime?
  order      Int?
  videoId    String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}
